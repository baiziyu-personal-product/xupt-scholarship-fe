{"version":3,"file":"index-c0f96840.js","sources":["../../../src/pages/application/pages/application-list/components/history-line/index.tsx","../../../src/pages/application/pages/application-list/components/history-table/interface.ts","../../../src/pages/application/pages/application-list/components/history-table/score-form.tsx","../../../src/pages/application/pages/application-list/components/history-table/index.tsx","../../../src/pages/application/pages/application-list/index.tsx"],"sourcesContent":["import * as React from 'react';\r\nimport { Card, Empty, Timeline } from 'antd';\r\nimport Style from '../../style.module.less';\r\n\r\ninterface ITimeLine {\r\n  time: number;\r\n  info: string;\r\n}\r\n\r\nconst HistoryLine: React.FC = () => {\r\n  const [timeLines, setTimeLines] = React.useState<ITimeLine[]>([]);\r\n  return (\r\n    <Card>\r\n      {\r\n        !timeLines.length ? (\r\n          <Empty />\r\n        ) : (\r\n            <Timeline mode=\"left\">\r\n              {\r\n                timeLines.map(item => {\r\n                  return (\r\n                    <Timeline.Item\r\n                      key={item.time}\r\n                      label={item.time}\r\n                    >{item.info}</Timeline.Item>\r\n                  );\r\n                })\r\n              }\r\n            </Timeline>\r\n          )\r\n      }\r\n    </Card>\r\n  );\r\n}\r\nexport default HistoryLine;","export type IHandleStatus = 'save' | 'submit';\r\nexport type IValidateStatus = 'success' | 'failed';\r\nimport * as api from '@/service/apply';\r\n\r\n/** 历史 Columns */\r\nexport interface HistoryTableData {\r\n  handle_state: IHandleStatus;\r\n  create_at: string;\r\n  edit_at: string;\r\n  id: number;\r\n  score_info: api.ScoreValue;\r\n  score: number;\r\n  user_id: string;\r\n}\r\n\r\nexport const TypesMap: Map<IValidateStatus | IHandleStatus, string> = new Map([\r\n  ['save', '已保存'],\r\n  ['submit', '已提交'],\r\n  ['success', '已验证'],\r\n  ['failed', '未验证']\r\n])","import { postApplicationScoreList } from '@/service/apply';\nimport { Button, Form, FormProps, InputNumber, message, Space, Statistic } from 'antd';\nimport * as React from 'react';\nimport style from \"../../style.module.less\";\nimport * as api from '@/service/apply';\n\ntype ScoreValue = api.ScoreValue;\n\ninterface IProps {\n  applyId: number;\n  initValue?: ScoreValue\n  submitCallBack?: () => void;\n}\n\nconst ScoreFormList: {\n  type: \"base\" | \"moral\" | \"practice\" | \"academic\" | \"sum\";\n  name: string;\n}[] = [{\n  type: \"moral\",\n  name: \"思想品德分数\",\n}, {\n  type: \"practice\",\n  name: \"实践活动分数\"\n}, {\n  type: \"academic\",\n  name: \"学术分数\",\n}, {\n  type: \"sum\",\n  name: \"总和\"\n}]\n\nconst ScoreForm: React.FC<IProps> = (props) => {\n  const { initValue, applyId, submitCallBack } = props;\n  const [sumValue, setSumValue] = React.useState(initValue?.sum);\n  const [loading, setLoading] = React.useState(false);\n  const onValuesChange: FormProps['onValuesChange'] = (_, values) => {\n    const sum = (Object.values(values) as number[]).reduce((p, c) => (p += (+c), p), 0);\n    setSumValue(sum);\n  }\n  const [formRef] = Form.useForm<ScoreValue>();\n  const submitForm = async () => {\n    const value = formRef.getFieldsValue(true) as ScoreValue;\n    try {\n      setLoading(true);\n      await api.postApplicationScoreList(applyId, {\n        ...value,\n        sum: sumValue!,\n      });\n      submitCallBack && await submitCallBack();\n      message.success(\"评定成功\");\n    } catch (error) {\n      message.error(error.message);\n    } finally {\n      setLoading(false);\n    }\n  }\n\n  React.useEffect(() => {\n    if (initValue) {\n      formRef.setFieldsValue(initValue);\n    }\n  }, [initValue, applyId])\n\n  return (\n    <Form\n      className={style[\"score-form\"]}\n      layout=\"inline\"\n      form={formRef}\n      onValuesChange={onValuesChange}\n      initialValues={initValue}\n    >\n      <Space align=\"center\">\n        {\n          ScoreFormList.map(item => (\n            <React.Fragment key={item.type}>\n              <div className={style[\"score-form-item\"]}>\n                {\n                  item.type === \"sum\" ? (\n                    <Statistic\n                      valueStyle={{\n                        fontSize: 20\n                      }}\n                      key=\"score\"\n                      title=\"总分\"\n                      value={sumValue}\n                    />\n                  ) : (\n                      <React.Fragment>\n                        <div className={style[\"form-top-label\"]}>{item.name}</div>\n                        <Form.Item\n                          name={item.type}\n                        >\n                          <InputNumber\n                            min={0}\n                            disabled={loading}\n                          />\n                        </Form.Item>\n                      </React.Fragment>\n                    )\n                }\n              </div>\n              {\n                item.type !== \"sum\" && (\n                  <span className={style[\"compute-icon\"]}>\n                    {item.type === \"academic\" ? \" = \" : \" + \"}\n                  </span>\n                )\n              }\n            </React.Fragment>\n          ))\n        }\n      </Space>\n      <Form.Item>\n        <Button onClick={submitForm} loading={loading} type=\"primary\">确认分数并提交</Button>\n      </Form.Item>\n    </Form >\n  );\n}\n\nScoreForm.defaultProps = {\n  initValue: {\n    moral: 0,\n    practice: 0,\n    academic: 0,\n    sum: 0,\n  }\n}\n\nexport default ScoreForm;","import * as React from 'react';\r\nimport { Table, Tag, TableProps, Button, message, Drawer } from 'antd';\r\nimport * as I from './interface';\r\nimport { EditTwoTone } from '@ant-design/icons';\r\nimport * as api from '@/service/apply';\r\nimport style from '../../style.module.less';\r\nimport { useProcess } from '@/context/process-status';\r\nimport ApplicationForm from '@/pages/application/pages/application-form';\r\nimport ScoreForm from './score-form';\r\n\r\nconst getColumns = (\r\n  changeEditForm: (id: number) => void\r\n): TableProps<I.HistoryTableData>['columns'] => [\r\n    {\r\n      title: '表单ID',\r\n      dataIndex: 'id',\r\n      key: 'id',\r\n    },\r\n    {\r\n      title: '当前状态',\r\n      dataIndex: 'handle_state',\r\n      key: 'handle_state',\r\n      render: (state: I.IHandleStatus) => <Tag color={state === 'submit' ? 'success' : 'geekblue'}>{I.TypesMap.get(state)}</Tag>\r\n    },\r\n    {\r\n      title: '学号',\r\n      dataIndex: 'user_id',\r\n      key: 'user_id',\r\n    },\r\n    {\r\n      title: '得分',\r\n      dataIndex: 'score',\r\n      key: 'score',\r\n    },\r\n    {\r\n      title: '最近评审人工号',\r\n      dataIndex: 'comment_user',\r\n      key: 'comment_user',\r\n    },\r\n    {\r\n      title: '创建时间',\r\n      key: 'create_at',\r\n      dataIndex: 'create_at'\r\n    },\r\n    {\r\n      title: '更新时间',\r\n      key: 'edit_at',\r\n      dataIndex: 'edit_at',\r\n    },\r\n    {\r\n      title: '操作',\r\n      key: 'action',\r\n      render: (_, record) => (\r\n        <Button\r\n          type=\"dashed\"\r\n          shape=\"round\"\r\n          onClick={() => changeEditForm(record.id)}\r\n          icon={<EditTwoTone />}\r\n        >审核</Button>\r\n      ),\r\n    },\r\n  ];\r\n\r\n\r\nconst HistoryTable: React.FC = () => {\r\n  const [tableData, setTableData] = React.useState<I.HistoryTableData[]>([]);\r\n  const [loading, setLoading] = React.useState(false);\r\n  const [visible, setVisible] = React.useState(false);\r\n  const [selectedId, setSelectedId] = React.useState(-1);\r\n  const { process_id } = useProcess();\r\n\r\n  const commentApplyForm = (id: number) => {\r\n    setVisible(true);\r\n    setSelectedId(id)\r\n  }\r\n\r\n  const onCloseForm = () => {\r\n    setVisible(false);\r\n    setSelectedId(-1);\r\n  };\r\n\r\n  const columns = React.useMemo(() => getColumns(commentApplyForm), [commentApplyForm])\r\n\r\n  const getTableData = async () => {\r\n    try {\r\n      setLoading(true);\r\n      const applyList = await api.getApplicationList({\r\n        page_count: 10,\r\n        page_index: 1,\r\n        is_check: \"manager\",\r\n        procedure_id: process_id\r\n      });\r\n      const tableData: I.HistoryTableData[] = (applyList || []).map(item => ({\r\n        key: item.id,\r\n        id: item.id,\r\n        create_at: item.create_at,\r\n        edit_at: item.edit_at,\r\n        handle_state: item.status,\r\n        score_info: item.score_info,\r\n        score: item.score,\r\n        user_id: item.user_id,\r\n        comment_user: item.step.user_id,\r\n      }));\r\n      setTableData(tableData);\r\n    } catch (error) {\r\n      console.log(error);\r\n      message.error(\"获取申请列表失败\");\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  }\r\n\r\n  const selectedInfo = React.useMemo(() => tableData.find(item => item.id === selectedId), [tableData, selectedId]);\r\n\r\n\r\n  React.useEffect(() => {\r\n    getTableData();\r\n  }, []);\r\n\r\n  console.log(selectedInfo, tableData, selectedId);\r\n\r\n  return (\r\n    <React.Fragment>\r\n      <Drawer\r\n        onClose={onCloseForm}\r\n        visible={visible}\r\n        width={992}\r\n        headerStyle={{\r\n          height: 48,\r\n          padding: 20\r\n        }}\r\n        bodyStyle={{\r\n          padding: '16px 8px'\r\n        }}\r\n        footer={\r\n          <ScoreForm applyId={selectedId} initValue={selectedInfo?.score_info} />\r\n        }\r\n        footerStyle={{\r\n          height: 80,\r\n        }}\r\n      >\r\n        <ApplicationForm commentApplyId={selectedId} />\r\n      </Drawer>\r\n      <Table\r\n        loading={loading}\r\n        columns={columns}\r\n        dataSource={tableData}\r\n      />\r\n    </React.Fragment>\r\n  )\r\n};\r\n\r\nexport default HistoryTable;","import { Col, Row, Space } from 'antd';\r\nimport * as React from 'react';\r\nimport HistoryLine from './components/history-line';\r\nimport HistoryTable from './components/history-table';\r\n\r\nconst ApplicationList: React.FC = () => {\r\n  return (\r\n    <React.Fragment>\r\n      <HistoryLine />\r\n      <HistoryTable />\r\n    </React.Fragment>\r\n  );\r\n};\r\n\r\nexport default ApplicationList;"],"names":["React.useState","api.postApplicationScoreList","React.Fragment","I.TypesMap","React.useMemo","api.getApplicationList"],"mappings":"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"}