{"version":3,"file":"index-b04eba6a.js","sources":["../../../src/pages/process/pages/initiate-process/context/step.tsx","../../../src/pages/process/pages/initiate-process/components/step-header.tsx","../../../src/pages/process/pages/initiate-process/context/form-value.tsx","../../../src/components/user-select/index.tsx","../../../src/pages/process/pages/initiate-process/components/initiate-form/components/card-form-item.tsx","../../../src/pages/process/pages/initiate-process/context/form-instance.tsx","../../../src/pages/process/pages/initiate-process/hooks/use-last-form.ts","../../../src/pages/process/pages/initiate-process/components/initiate-form/index.tsx","../../../src/pages/process/pages/initiate-process/components/confirm-process/index.tsx","../../../src/pages/process/pages/initiate-process/components/upload-file/index.tsx","../../../src/pages/process/pages/initiate-process/components/step-content/index.tsx","../../../src/pages/process/pages/initiate-process/components/step-footer.tsx","../../../src/pages/process/pages/initiate-process/index.tsx"],"sourcesContent":["import * as React from 'react';\r\nimport { ProcessFormType } from './form-value';\r\n\r\ninterface StepContext {\r\n  step: {\r\n    index: number;\r\n    type: ProcessFormType;\r\n  }\r\n  next: () => void;\r\n  prev: () => void;\r\n}\r\n\r\nconst FormStepType:ProcessFormType[] = ['initiate', 'upload'];\r\n\r\nconst getFormType = (index :number ) => {\r\n  return FormStepType[index];\r\n}\r\n\r\nconst StepContext = React.createContext<StepContext>({} as StepContext);\r\n\r\nexport const useStepContext = () => React.useContext(StepContext);\r\n\r\ninterface IProps extends React.PropsWithChildren<{}> {\r\n\r\n}\r\n\r\nexport const StepProvider: React.FC<IProps> = (props) => {\r\n\r\n  const [stepIndex, setStepIndex] = React.useState(0);\r\n\r\n  const next = () => setStepIndex(stepIndex + 1 > 2 ? 2 : stepIndex + 1);\r\n  const prev = () => setStepIndex(stepIndex - 1 < 0 ? 0 : stepIndex - 1)\r\n  return (\r\n    <StepContext.Provider\r\n      value={{\r\n        step: {\r\n          index: stepIndex,\r\n          type: getFormType(stepIndex)\r\n        },\r\n        next,\r\n        prev,\r\n      }}\r\n    >\r\n      {props.children}\r\n    </StepContext.Provider>\r\n  )\r\n};","import { useStepContext } from '@/pages/process/pages/initiate-process/context/step';\r\nimport { Steps } from 'antd';\r\nimport * as React from 'react';\r\nimport style from '../style.module.less'\r\nconst { Step } = Steps;\r\n\r\nconst StepHeader: React.FC = () => {\r\n  const { step } = useStepContext();\r\n  return (\r\n    <Steps\r\n      current={step.index}\r\n      className={style['steps-page-header']}\r\n    >\r\n      <Step\r\n        title=\"发起奖学金评定流程\"\r\n      ></Step>\r\n      <Step\r\n        title=\"上传相关公开文件\"\r\n      />\r\n      <Step title=\"确认发起流程\"></Step>\r\n    </Steps>\r\n  )\r\n}\r\n\r\nexport default StepHeader;","import * as React from 'react';\r\n\r\nexport type ProcessFormType = 'initiate' | 'upload';\r\n\r\ninterface FormValueContextValue {\r\n  initiate: any;\r\n  upload: any;\r\n}\r\n\r\ninterface FormValueContext extends FormValueContextValue {\r\n  updateFormValue: (type: ProcessFormType, value: any) => void;\r\n}\r\n\r\nconst FormValueContext = React.createContext({} as FormValueContext);\r\n\r\nexport const useProcessFormValueContext = () => React.useContext(FormValueContext);\r\n\r\ninterface IProps extends React.PropsWithChildren<{}> {\r\n\r\n}\r\n\r\nfunction reducer(state: FormValueContextValue, action: { type: ProcessFormType, value: any }): FormValueContextValue {\r\n  switch (action.type) {\r\n    case 'initiate':\r\n      return {\r\n        ...state,\r\n        initiate: action.value,\r\n      };\r\n    case 'upload':\r\n      return {\r\n        ...state,\r\n        upload: action.value,\r\n      };\r\n    default:\r\n      throw new Error();\r\n  }\r\n}\r\n\r\nexport const ProcessFormValueProvider: React.FC<IProps> = (props) => {\r\n  const [formState, dispatch] = React.useReducer(reducer, {\r\n    initiate: null,\r\n    upload: null,\r\n  });\r\n\r\n  const updateFormValue = (type: ProcessFormType, value: any) => {\r\n    dispatch({ type, value })\r\n  }\r\n  return (\r\n    <FormValueContext.Provider\r\n      value={{\r\n        ...formState,\r\n        updateFormValue\r\n      }}\r\n    >\r\n      {props.children}\r\n    </FormValueContext.Provider>\r\n  )\r\n}","import * as React from 'react';\r\nimport style from './style.module.less';\r\nimport { Avatar, SelectProps, Select } from 'antd';\r\nimport { useUserListContext } from '@/context/user-list';\r\n\r\ninterface IProps extends SelectProps {\r\n}\r\n\r\nconst UserSelector: React.FC<IProps> = (props) => {\r\n  const { placeholder, ...resetProps } = props;\r\n  const { list: options } = useUserListContext();\r\n  return (\r\n    <Select\r\n      {...resetProps}\r\n      allowClear\r\n      mode=\"multiple\"\r\n      filterOption={\r\n        (value, option) => {\r\n          return `${option?.value}-${option?.name}`.includes(value.toUpperCase());\r\n        }\r\n      }\r\n      placeholder={placeholder || \"选择成员，支持使用Email、姓名进行添加\"}\r\n    >\r\n      {\r\n        options.map(option => (\r\n          <Select.Option\r\n            key={option.email}\r\n            value={option.email}\r\n            name={`${option.name}-${option.en}`}\r\n          >\r\n            <div className={style['user-info-box']}>\r\n              <Avatar className={style['user-avatar']} src={option.avatar} />\r\n              <div className={style['user-text-info']}>\r\n                <span className={style['user-name-text']}>{option.name}</span>\r\n                <span className={style['user-email-text']}>{`<${option.email}>`}</span>\r\n              </div>\r\n            </div>\r\n          </Select.Option>\r\n        ))\r\n      }\r\n    </Select>\r\n  )\r\n}\r\n\r\nexport default UserSelector;","import { ProcessList, ProcessStep } from '@/pages/process/pages/handle-process/process.list';\r\nimport { Card, Form, Input, Space, Tag } from 'antd';\r\nimport style from '../../../style.module.less';\r\nimport * as React from 'react';\r\nimport { disabledFormFeatureDate, requiredRule } from '@/config/form';\r\nimport UserSelector from '@/components/user-select';\r\nimport FmtDatePicker from '@/components/fmt-date-picker';\r\n\r\ninterface IProps {\r\n  name: ProcessStep;\r\n  title: string;\r\n  duration: number;\r\n  processIndex: number;\r\n}\r\n\r\nconst durationColor = [\"green\", \"blue\", \"purple\"]\r\nconst currDurationColor = [\"geekblue\", \"volcano\", \"gold\", \"lime\"];\r\n\r\nconst CardFormItem: React.FC<IProps> = (props) => {\r\n  const { name, title, duration, processIndex } = props;\r\n  return (\r\n    <Card\r\n      type=\"inner\"\r\n      title={title}\r\n      headStyle={{\r\n        fontWeight: 600\r\n      }}\r\n      hoverable\r\n      className={style['initiate-form-item']}\r\n    >\r\n      <Space align=\"baseline\">\r\n        <Form.Item\r\n          shouldUpdate\r\n        >\r\n          {\r\n            ({ getFieldValue }) => {\r\n              let disableDate = disabledFormFeatureDate;\r\n              if (processIndex > 0) {\r\n                let preIndexDate = getFieldValue(ProcessList[processIndex - 1].name).date || [];\r\n                // 学科办审核、复查和年纪公示同时进行\r\n                if (name === 'examination_and_review_of_the_discipline_office') {\r\n                  preIndexDate = getFieldValue(ProcessList[processIndex - 2].name).date || [];\r\n                }\r\n                if (preIndexDate.length > 0) {\r\n                  disableDate = (current) => {\r\n                    return current && current < preIndexDate[1];\r\n                  }\r\n                }\r\n              }\r\n              return (\r\n                <Form.Item\r\n                  name={[name, \"date\"]}\r\n                  label=\"起始时间\"\r\n                  rules={requiredRule}\r\n                >\r\n                  <FmtDatePicker\r\n                    type=\"range\"\r\n                    placeholder={[\"流程开始时间\", \"流程截止时间\"]}\r\n                    disabledDate={disableDate}\r\n                  />\r\n                </Form.Item>\r\n              );\r\n            }\r\n          }\r\n        </Form.Item>\r\n        <Form.Item shouldUpdate={(prev, curr) => prev !== curr}>\r\n          {\r\n            ({ getFieldValue }) => {\r\n              let currDuration = 0;\r\n              const currDurationDate = getFieldValue(name).date || [];\r\n              if (currDurationDate.length > 0) {\r\n                currDuration = currDurationDate[1].diff(currDurationDate[0], 'days') + 1;\r\n              }\r\n              return (\r\n                <Tag color={\r\n                  currDuration > 0\r\n                    ? durationColor[currDuration % durationColor.length]\r\n                    : currDurationColor[duration % currDurationColor.length]\r\n                }>\r\n                  {\r\n                    currDuration > 0\r\n                      ? `当前流程时长『${currDuration}天』`\r\n                      : (duration > 0 ? (\r\n                        `流程预估时长『${duration}天』`\r\n                      ) : `暂无预期时长`)\r\n                  }\r\n                </Tag>\r\n              )\r\n            }\r\n          }\r\n        </Form.Item>\r\n      </Space>\r\n      <Form.Item\r\n        name={[name, \"desc\"]}\r\n        label=\"描述信息\"\r\n      >\r\n        <Input.TextArea\r\n          placeholder=\"请输入该流程对应的描述信息以及相关帮助学生或其他管理者了解该流程的描述性文字\"\r\n        />\r\n      </Form.Item>\r\n      <Form.Item\r\n        name={[name, \"mentions\"]}\r\n        label=\"通知成员\"\r\n      >\r\n        <UserSelector />\r\n      </Form.Item>\r\n    </Card>\r\n  )\r\n};\r\n\r\nexport default CardFormItem;","import { FormInstance } from 'antd';\r\nimport * as React from 'react';\r\nimport { ProcessFormType } from './form-value';\r\n\r\ninterface FormInstanceContextValue {\r\n  initiate: any;\r\n  upload: any;\r\n}\r\n\r\ninterface FormInstanceContext extends FormInstanceContextValue {\r\n  updateFormInstance: (type: ProcessFormType, value: any) => void;\r\n  getFormInstance: (type: ProcessFormType) => FormInstance;\r\n}\r\n\r\nconst FormInstanceContext = React.createContext({} as FormInstanceContext);\r\n\r\nexport const useProcessFormInstanceContext = () => React.useContext(FormInstanceContext);\r\n\r\ninterface IProps extends React.PropsWithChildren<{}> {\r\n\r\n}\r\n\r\nfunction reducer(state: FormInstanceContextValue, action: { type: ProcessFormType, value: any }): FormInstanceContextValue {\r\n  switch (action.type) {\r\n    case 'initiate':\r\n      return {\r\n        ...state,\r\n        initiate: action.value,\r\n      };\r\n    case 'upload':\r\n      return {\r\n        ...state,\r\n        upload: action.value,\r\n      };\r\n    default:\r\n      throw new Error();\r\n  }\r\n}\r\n\r\nexport const ProcessFormInstanceProvider: React.FC<IProps> = (props) => {\r\n  const [formInstance, dispatch] = React.useReducer(reducer, {\r\n    initiate: null,\r\n    upload: null,\r\n  });\r\n\r\n  const updateFormInstance = (type: ProcessFormType, value: any) => {\r\n    dispatch({ type, value })\r\n  }\r\n\r\n  const getFormInstance = (type: ProcessFormType) => {\r\n    return formInstance[type];\r\n  }\r\n  return (\r\n    <FormInstanceContext.Provider\r\n      value={{\r\n        ...formInstance,\r\n        updateFormInstance,\r\n        getFormInstance,\r\n      }}\r\n    >\r\n      {props.children}\r\n    </FormInstanceContext.Provider>\r\n  )\r\n}","import { ProcessFormType } from '../context/form-value';\r\nimport { Form, FormProps, FormInstance } from 'antd';\r\nimport * as React from 'react';\r\nimport { useProcessFormValueContext } from '../context/form-value';\r\nimport { useStepContext } from '../context/step';\r\nimport { useProcessFormInstanceContext } from '../context/form-instance';\r\n\r\nexport const useLastForm = (formType: ProcessFormType): [FormInstance, FormProps['onValuesChange']] => {\r\n  const { updateFormValue, ...formValue } = useProcessFormValueContext();\r\n  const { step } = useStepContext();\r\n  const { updateFormInstance } = useProcessFormInstanceContext();\r\n  const [form] = Form.useForm();\r\n  React.useEffect(() => {\r\n    form.setFieldsValue(formValue[formType]);\r\n  }, [step]);\r\n  React.useEffect(() => {\r\n    updateFormInstance(formType, form);\r\n  }, [formType])\r\n  const onValuesChange: FormProps['onValuesChange'] = (_, v) => {\r\n    updateFormValue(formType, v);\r\n  }\r\n  return [form, onValuesChange];\r\n}","\r\nimport { ProcessList, ProcessStep } from '@/pages/process/pages/handle-process/process.list';\r\nimport { Form } from 'antd';\r\nimport * as React from 'react';\r\nimport CardFormItem from './components/card-form-item';\r\nimport style from '../../style.module.less';\r\nimport { useLastForm } from '../../hooks/use-last-form';\r\nimport { validateMessages } from '@/config/form';\r\n\r\ntype DefaultStepValue = {\r\n  date: [string, string] | undefined | [];\r\n  desc?: string;\r\n  mentions?: string[];\r\n};\r\n\r\nexport type InitiateFormValue = {\r\n  [step in ProcessStep]: DefaultStepValue;\r\n};\r\nconst defaultValue: DefaultStepValue = {\r\n  date: [],\r\n  desc: '',\r\n  mentions: []\r\n}\r\n\r\nconst getInitiateFormValue = (): InitiateFormValue => {\r\n  const data = {} as InitiateFormValue;\r\n  ProcessList.forEach(item => {\r\n    data[item.name] = defaultValue;\r\n  });\r\n  return data;\r\n}\r\n\r\nconst InitiateForm: React.FC = () => {\r\n  const [form, onValuesChange] = useLastForm('initiate');\r\n  return (\r\n    <Form\r\n      className={style['initiate-form']}\r\n      form={form}\r\n      colon={false}\r\n      initialValues={getInitiateFormValue()}\r\n      requiredMark={false}\r\n      validateMessages={validateMessages}\r\n      onValuesChange={onValuesChange}\r\n    >\r\n      {\r\n        ProcessList.map((process, index) => (\r\n          <React.Fragment key={process.name}>\r\n            <CardFormItem\r\n              title={process.title}\r\n              name={process.name}\r\n              processIndex={index}\r\n              duration={process.duration}\r\n            />\r\n          </React.Fragment>\r\n        ))\r\n      }\r\n    </Form>\r\n  );\r\n};\r\n\r\nexport default InitiateForm;","import * as React from 'react';\r\nimport { Typography, Divider, Card } from 'antd';\r\nconst { Title, Paragraph, Text, Link } = Typography;\r\nimport style from '../../style.module.less';\r\nimport { ProcessList } from '../../../handle-process/process.list';\r\nimport { ApplyProcessCharts } from '../../../handle-process/components/apply-process-steps';\r\n\r\nconst textCenter = style['text-center'];\r\nconst textIndent = style['text-indent'];\r\n\r\nconst ConfirmProcess: React.FC = () => {\r\n  const processSteps = React.useMemo(() => ProcessList.map(item => item.title).join('，'), [])\r\n  return (\r\n    <Card\r\n      style={{\r\n        marginBottom: 30\r\n      }}\r\n      headStyle={{\r\n        fontWeight: 600\r\n      }}\r\n      bodyStyle={{\r\n        padding: '100px 120px'\r\n      }}\r\n      hoverable\r\n    >\r\n      <Typography>\r\n        <Title className={textCenter} level={3}>《奖学金流程发起说明书》</Title>\r\n        <Paragraph>\r\n          <Text className={textCenter}>\r\n            本说明书仅用于使用该系统发起研究生奖学金评定流程以及后续的流程管理，对于说明书中相关内容存疑可以致电对应研究生院办公室电话进行咨询。\r\n          </Text>\r\n        </Paragraph>\r\n        <Title level={4}>\r\n          1. 流程发起说明\r\n        </Title>\r\n        <Typography className={textIndent}>\r\n          流程包含12个阶段，分别是{processSteps}。\r\n          流程顺序执行如下图，当前支持同时执行学科办审核、复查和年级公示两个部分同时进行进行。\r\n        </Typography>\r\n        <ApplyProcessCharts title=\"\" currentStep=\"deployment_mobilization_phase\" />\r\n        <Title level={4}>\r\n          2. 流程进行说明\r\n        </Title>\r\n        <Typography className={textIndent}>\r\n          流程在开始前会陆续向下一流程的参与人员（管理人员以及研究生）发送邮件通知，并且告知对应的操作方式。\r\n          流程在进行至个人申请阶段后开放个人申请奖学金通道（申请奖学金→发起申请），支持研究生按照个人实际情况进行填写和完善对应的申请信息。\r\n          <Text strong>在其他非自评阶段，不会开启申请奖学金通道。</Text>\r\n        </Typography>\r\n        <Title level={4}>\r\n          3. 奖学金审核、复查\r\n        </Title>\r\n        <Typography>\r\n          奖学金审核、复查包括个人自评时在评定流程中流程管理进行审批和处理，对于存疑的信息进行异常处理，通知对应的研究生处理。\r\n        </Typography>\r\n        <Title level={4}>\r\n          4. 流程修改说明\r\n        </Title>\r\n        <Paragraph className={textIndent} >\r\n          在确认创建奖学金评定流程后，流程距离进入第一阶段（部署动员阶段）的24小时之前，可以进行流程的修改和撤销。\r\n          <Text mark>在流程创建后进行对应的修改和撤销操作，都会被认为当前的操作是一种风险操作。</Text>\r\n        </Paragraph>\r\n      </Typography>\r\n      <Typography className={textIndent}>\r\n        <Text strong>\r\n          在本系统的所有流程管理以及对应的通知，都是采用邮件进行通知和反馈，希望对应的参与人员在流程开始后能及时核对个人奖学金信息。\r\n          对于存疑的个人信息可进入用户中心进行修改和反馈。\r\n        </Text>\r\n      </Typography>\r\n    </Card>\r\n  );\r\n};\r\n\r\nexport default ConfirmProcess;","import UploadDragger from '@/components/upload-file';\r\nimport { Card, Form } from 'antd';\r\nimport { UploadFile } from 'antd/lib/upload/interface';\r\nimport * as React from 'react';\r\nimport { useLastForm } from '../../hooks/use-last-form';\r\n\r\nexport interface UploadFormValue {\r\n  files: UploadFile[];\r\n}\r\n\r\nconst uploadFormValue = {\r\n  files: []\r\n}\r\n\r\nconst UploadFile: React.FC = () => {\r\n  const [form, onValuesChange] = useLastForm('upload');\r\n  return (\r\n    <Card\r\n      type=\"inner\"\r\n      title=\"流程以及评定依据相关文件\"\r\n      style={{\r\n        margin: '0 96px',\r\n      }}\r\n      headStyle={{\r\n        fontWeight: 600\r\n      }}\r\n      hoverable\r\n    >\r\n      <Form\r\n        form={form}\r\n        initialValues={uploadFormValue}\r\n        onValuesChange={onValuesChange}\r\n      >\r\n        <Form.Item\r\n          name=\"files\"\r\n        >\r\n          <UploadDragger />\r\n        </Form.Item>\r\n      </Form>\r\n    </Card>\r\n  );\r\n};\r\n\r\nexport default UploadFile;","import * as React from 'react';\r\nimport { ProcessFormValueProvider } from '../../context/form-value';\r\nimport { useStepContext } from '../../context/step';\r\nimport InitiateForm from '../initiate-form';\r\nimport ConfirmProcess from '../confirm-process';\r\nimport UploadFile from '../upload-file';\r\nimport useIsCreate from '../../hooks/use-is-create';\r\nimport { Divider } from 'antd';\r\n\r\nconst StepContent: React.FC = () => {\r\n  const { step } = useStepContext();\r\n  const isCreate = useIsCreate();\r\n  const stepIndex = step.index;\r\n  const ContentComponent = React.useMemo(() => {\r\n    if (!isCreate) {\r\n      return (\r\n        <React.Fragment>\r\n          <ConfirmProcess />\r\n          <Divider orientation=\"left\">相关文件</Divider>\r\n          <UploadFile />\r\n          <Divider orientation=\"left\">详细创建信息</Divider>\r\n          <InitiateForm />\r\n        </React.Fragment>\r\n      );\r\n    }\r\n    switch (stepIndex) {\r\n      case 2:\r\n        return (\r\n          <ConfirmProcess />\r\n        );\r\n      case 1:\r\n        return (\r\n          <UploadFile />\r\n        );\r\n      default:\r\n        return (\r\n          <InitiateForm />\r\n        );\r\n    }\r\n  }, [stepIndex, isCreate]);\r\n  return (\r\n    <ProcessFormValueProvider>\r\n      {\r\n        ContentComponent\r\n      }\r\n    </ProcessFormValueProvider>\r\n  );\r\n};\r\n\r\nexport default React.memo(StepContent);","import { useStepContext } from '@/pages/process/pages/initiate-process/context/step';\r\nimport { Button, message } from 'antd';\r\nimport * as React from 'react';\r\nimport * as api from '@/service/process';\r\nimport { useProcessFormInstanceContext } from '../context/form-instance';\r\nimport style from '../style.module.less';\r\nimport { InitiateFormValue } from './initiate-form';\r\nimport { UploadFormValue } from './upload-file';\r\nimport moment from 'moment';\r\nimport { DATE_FORMAT_NORMAL } from '@/config/time';\r\nimport useIsCreate from '../hooks/use-is-create';\r\nimport { CopyOutlined, EditOutlined } from '@ant-design/icons';\r\nimport { useProcess } from '@/context/process-status';\r\n\r\nconst StepFooter: React.FC = () => {\r\n  const { step, next, prev } = useStepContext();\r\n  const { getFormInstance } = useProcessFormInstanceContext();\r\n  const [loading, setLoading] = React.useState(false);\r\n  const [timeOut, setTimeOut] = React.useState(5);\r\n  const timer = React.useRef<any>();\r\n  const stepIndex = step.index;\r\n  const { process_id, createable, editable } = useProcess();\r\n  const isCreate = useIsCreate();\r\n\r\n  const goNextStep = async () => {\r\n    const form = getFormInstance(step.type);\r\n    try {\r\n      setLoading(true);\r\n      await form.validateFields();\r\n      next();\r\n    } catch (error) {\r\n      console.error(error);\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  }\r\n\r\n  const submitProcess = async () => {\r\n    try {\r\n      setLoading(true);\r\n      const initiateValue: InitiateFormValue = getFormInstance('initiate').getFieldsValue(true);\r\n      Object.keys(initiateValue).map((key) => {\r\n        const tempKey = key as keyof InitiateFormValue;\r\n        const [start, end] = initiateValue[tempKey].date || [];\r\n        initiateValue[tempKey].date = [\r\n          moment(start).format(DATE_FORMAT_NORMAL),\r\n          moment(end).format(DATE_FORMAT_NORMAL)]\r\n      });\r\n      const uploadValue: UploadFormValue = getFormInstance('upload').getFieldsValue(true);\r\n      const processId = await api.postInitProcess({\r\n        upload: uploadValue,\r\n        form: initiateValue,\r\n      });\r\n      message.success(\"创建成功\");\r\n    } catch (error) {\r\n      message.error(error.message);\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  }\r\n\r\n  const getProcess = async () => {\r\n    try {\r\n      setLoading(true);\r\n      const { form } = await api.getProcessData(process_id);\r\n      Object.keys(form.form).map((key) => {\r\n        const tempKey = key as keyof InitiateFormValue;\r\n        const [start, end] = form.form[tempKey].date || [];\r\n        form.form[tempKey].date = [\r\n          moment(start, DATE_FORMAT_NORMAL),\r\n          moment(end, DATE_FORMAT_NORMAL)\r\n        ] as any;\r\n      });\r\n      getFormInstance('initiate').setFieldsValue(form.form);\r\n      getFormInstance('upload').setFieldsValue(form.upload);\r\n    } catch (error) {\r\n      message.error(error.message);\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  }\r\n\r\n  React.useEffect(() => {\r\n    if (!isCreate && getFormInstance('initiate') && getFormInstance('upload')) {\r\n      getProcess()\r\n    }\r\n  }, [process_id, getFormInstance])\r\n\r\n  React.useEffect(() => {\r\n    if (timeOut > 0) {\r\n      if (stepIndex === 2) {\r\n        setLoading(true);\r\n        timer.current = setInterval(() => {\r\n          setTimeOut(() => timeOut - 1);\r\n        }, 1000);\r\n      }\r\n    } else {\r\n      clearInterval(timer.current);\r\n      setLoading(false);\r\n    }\r\n    return () => {\r\n      timer.current && clearInterval(timer.current);\r\n      setLoading(false);\r\n    }\r\n  }, [timeOut, stepIndex]);\r\n\r\n  return (\r\n    <div\r\n      className={style['step-footer-banner']}\r\n    >\r\n      {\r\n        stepIndex !== 0 && isCreate && (\r\n          <Button className={style['step-prev-button']} onClick={prev}>上一步</Button>\r\n        )\r\n      }\r\n      {\r\n        (stepIndex === 2 || !isCreate) && (createable || editable) && (\r\n          <Button\r\n            type=\"primary\"\r\n            loading={loading}\r\n            onClick={submitProcess}\r\n            disabled={loading || !(isCreate ? createable : editable)}\r\n            icon={isCreate ? <CopyOutlined /> : <EditOutlined />}\r\n          >\r\n            { isCreate ? timeOut <= 0 ? '' : `${timeOut} s` : ''}\r\n            我已知晓，确认{isCreate ? \"创建\" : \"修改\"}\r\n          </Button>\r\n        )\r\n      }\r\n      {\r\n        stepIndex !== 2 && isCreate && (\r\n          <Button type=\"primary\" disabled={loading} loading={loading} onClick={goNextStep}>下一步</Button>\r\n        )\r\n      }\r\n    </div >\r\n  );\r\n};\r\n\r\nexport default StepFooter;","/**\r\n * 发起流程\r\n */\r\nimport * as React from 'react';\r\nimport { Card } from 'antd';\r\nimport { StepProvider } from './context/step';\r\nimport StepHeader from './components/step-header';\r\nimport StepContent from './components/step-content';\r\nimport StepFooter from './components/step-footer';\r\nimport { ProcessFormInstanceProvider } from './context/form-instance';\r\nimport useIsCreate from './hooks/use-is-create';\r\n\r\nconst InitiateProcess: React.FC = () => {\r\n  const isCreate = useIsCreate();\r\n  return (\r\n    <StepProvider>\r\n      <ProcessFormInstanceProvider>\r\n        <Card>\r\n          {\r\n            isCreate && (\r\n              <StepHeader />\r\n            )\r\n          }\r\n          <StepContent />\r\n          <StepFooter />\r\n        </Card>\r\n      </ProcessFormInstanceProvider>\r\n    </StepProvider>\r\n  )\r\n};\r\n\r\nexport default InitiateProcess;"],"names":["React.createContext","React.useContext","React.useState","style","React.useReducer","reducer","React.Fragment","React.useMemo","React.memo","React.useRef","api.postInitProcess","api.getProcessData","StepContent"],"mappings":"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"}